<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>David Goldblatt's website - David Goldblatt</title><link>http://dgoldblatt.com/</link><description></description><lastBuildDate>Tue, 30 Jun 2015 15:20:00 -0700</lastBuildDate><item><title>A threading riddle - Solution</title><link>http://dgoldblatt.com/a-threading-riddle-solution.html</link><description>&lt;p&gt;A solution to the threading riddle from the previous post&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Goldblatt</dc:creator><pubDate>Tue, 30 Jun 2015 15:20:00 -0700</pubDate><guid isPermaLink="false">tag:dgoldblatt.com,2015-06-30:/a-threading-riddle-solution.html</guid><category>concurrency</category><category>multithreading</category><category>programming</category></item><item><title>A threading riddle</title><link>http://dgoldblatt.com/a-threading-riddle.html</link><description>&lt;p&gt;A tricky problem involving threads waiting for complex conditions to become true&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Goldblatt</dc:creator><pubDate>Wed, 24 Jun 2015 15:20:00 -0700</pubDate><guid isPermaLink="false">tag:dgoldblatt.com,2015-06-24:/a-threading-riddle.html</guid><category>concurrency</category><category>multithreading</category><category>programming</category></item><item><title>Going from lock-free to wait-free</title><link>http://dgoldblatt.com/going-from-lock-free-to-wait-free.html</link><description>&lt;p&gt;Using further data replication tricks, we can go from lock-free reads to wait-free ones.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Goldblatt</dc:creator><pubDate>Tue, 05 May 2015 15:20:00 -0700</pubDate><guid isPermaLink="false">tag:dgoldblatt.com,2015-05-05:/going-from-lock-free-to-wait-free.html</guid><category>concurrency</category><category>multithreading</category><category>lockfree</category><category>programming</category></item><item><title>Lock-free reads through data replication</title><link>http://dgoldblatt.com/lock-free-reads-through-data-replication.html</link><description>&lt;p&gt;By keeping multiple copies of a data object around, we can allow readers to proceed even while a writer might be blocked mid-write.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Goldblatt</dc:creator><pubDate>Wed, 29 Apr 2015 20:30:00 -0700</pubDate><guid isPermaLink="false">tag:dgoldblatt.com,2015-04-29:/lock-free-reads-through-data-replication.html</guid><category>concurrency</category><category>multithreading</category><category>lockfree</category><category>programming</category></item></channel></rss>